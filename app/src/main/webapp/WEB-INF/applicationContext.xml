<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-v.xsd">

   <!-- in-memory database and a datasource 
    <jdbc:embedded-database id="dataSource">
        <jdbc:script location="classpath:database/jpetstore-hsqldb-schema.sql"/>
        <jdbc:script location="classpath:database/jpetstore-hsqldb-dataload.sql"/>
    </jdbc:embedded-database>
    -->
    <!-- enable component scanning and autowire (beware that this does not enable mapper scanning!) -->    
    
	
	<context:component-scan base-package="net.p2pmag.totl" > 
		<context:include-filter type="regex" 
                       expression="net.p2pmag.totl.dao.*DAO*" /> 
		<context:include-filter type="regex" 
                       expression="net.p2pmag.totl.services.*Service*" /> 
	</context:component-scan>
	
	<bean id="datasource" class="com.zaxxer.hikari.HikariDataSource">
	
			<constructor-arg>
		        <bean class="com.zaxxer.hikari.HikariConfig">
		            <constructor-arg>
		                <props>
		                    <prop key="dataSource.url">jdbc:hsqldb:file:c:/home3/tolt/hsqldb/tolt</prop>
		                    <prop key="dataSource.user">sa</prop>
		                    <prop key="dataSource.password"></prop>
		                </props>
		            </constructor-arg>
		            <property name="dataSourceClassName" value="org.hsqldb.jdbc.JDBCDataSource" />
		        </bean>
		    </constructor-arg>
	</bean>    
	
	<bean id="sql2o" class="org.sql2o.Sql2o">				
		<constructor-arg type='javax.sql.DataSource' ref='datasource'/>		
	</bean>
        
</beans>